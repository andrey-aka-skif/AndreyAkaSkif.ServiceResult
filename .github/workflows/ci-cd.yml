name: Build, Test and Deploy

on:
  push:
    branches: ["main", "docs/**"]
  pull_request:
    branches: [ "main" ]
  create:
    tags: ['v*.*.*']
  workflow_dispatch:

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  PACKAGE_OUTPUT_DIR: ./nupkg
  DOTNET_VERSION: '7.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build package
        run: dotnet build --configuration Release --no-restore
      
      - name: Pack NuGet
        run: dotnet pack --configuration Release --no-build --output ${{ env.PACKAGE_OUTPUT_DIR }}
      
      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run tests
        run: echo "start tests"

  docs-generate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET for DocFX
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install DocFX
        run: dotnet tool update -g docfx

      - name: Build documentation
        run: docfx docs/docfx.json

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_site

  deploy-nuget:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      packages: write
      contents: read
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: ${{ env.PACKAGE_OUTPUT_DIR }}

      - name: Setup .NET for GitHub Packages
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish to GitHub Packages
        run: |
          for package in ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg; do
            dotnet nuget push "$package" \
              --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
              --api-key ${{ secrets.GH_PACKAGES_TOKEN }} \
              --skip-duplicate
          done

  deploy-docs:
    runs-on: ubuntu-latest
    needs: docs-generate
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download docs artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: .

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4