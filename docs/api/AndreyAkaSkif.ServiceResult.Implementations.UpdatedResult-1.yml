### YamlMime:ManagedReference
items:
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1
  commentId: T:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1
  id: UpdatedResult`1
  parent: AndreyAkaSkif.ServiceResult.Implementations
  children:
  - AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor(`0)
  - AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data
  - AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk
  langs:
  - csharp
  - vb
  name: UpdatedResult<T>
  nameWithType: UpdatedResult<T>
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>
  type: Class
  source:
    remote:
      path: src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
      branch: docs/12-add-ci-for-docfx
      repo: https://github.com/andrey-aka-skif/AndreyAkaSkif.ServiceResult.git
    id: UpdatedResult
    path: ../src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
    startLine: 9
  assemblies:
  - AndreyAkaSkif.ServiceResult
  namespace: AndreyAkaSkif.ServiceResult.Implementations
  summary: Сущность обновлена
  remarks: По назначению соответствует HTTP status code 200
  example: []
  syntax:
    content: 'public sealed class UpdatedResult<T> : Result<T>'
    typeParameters:
    - id: T
      description: Тип возвращаемого объекта
    content.vb: Public NotInheritable Class UpdatedResult(Of T) Inherits Result(Of T)
  inheritance:
  - System.Object
  - AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  inheritedMembers:
  - AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.IsFailure
  - AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.Error
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UpdatedResult(Of T)
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T)
  name.vb: UpdatedResult(Of T)
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor(`0)
  commentId: M:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1
  langs:
  - csharp
  - vb
  name: UpdatedResult(T)
  nameWithType: UpdatedResult<T>.UpdatedResult(T)
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.UpdatedResult(T)
  type: Constructor
  source:
    remote:
      path: src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
      branch: docs/12-add-ci-for-docfx
      repo: https://github.com/andrey-aka-skif/AndreyAkaSkif.ServiceResult.git
    id: .ctor
    path: ../src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
    startLine: 11
  assemblies:
  - AndreyAkaSkif.ServiceResult
  namespace: AndreyAkaSkif.ServiceResult.Implementations
  syntax:
    content: public UpdatedResult(T data)
    parameters:
    - id: data
      type: '{T}'
    content.vb: Public Sub New(data As T)
  overload: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor*
  nameWithType.vb: UpdatedResult(Of T).New(T)
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).New(T)
  name.vb: New(T)
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk
  commentId: P:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk
  id: IsOk
  parent: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1
  langs:
  - csharp
  - vb
  name: IsOk
  nameWithType: UpdatedResult<T>.IsOk
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.IsOk
  type: Property
  source:
    remote:
      path: src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
      branch: docs/12-add-ci-for-docfx
      repo: https://github.com/andrey-aka-skif/AndreyAkaSkif.ServiceResult.git
    id: IsOk
    path: ../src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
    startLine: 16
  assemblies:
  - AndreyAkaSkif.ServiceResult
  namespace: AndreyAkaSkif.ServiceResult.Implementations
  example: []
  syntax:
    content: public override bool IsOk { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsOk As Boolean
  overridden: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.IsOk
  overload: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk*
  nameWithType.vb: UpdatedResult(Of T).IsOk
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).IsOk
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data
  commentId: P:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data
  id: Data
  parent: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: UpdatedResult<T>.Data
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.Data
  type: Property
  source:
    remote:
      path: src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
      branch: docs/12-add-ci-for-docfx
      repo: https://github.com/andrey-aka-skif/AndreyAkaSkif.ServiceResult.git
    id: Data
    path: ../src/AndreyAkaSkif.ServiceResult/Implementations/UpdatedResult.cs
    startLine: 18
  assemblies:
  - AndreyAkaSkif.ServiceResult
  namespace: AndreyAkaSkif.ServiceResult.Implementations
  example: []
  syntax:
    content: public override T Data { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Overrides ReadOnly Property Data As T
  overridden: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.Data
  overload: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data*
  nameWithType.vb: UpdatedResult(Of T).Data
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).Data
references:
- uid: AndreyAkaSkif.ServiceResult.Implementations
  commentId: N:AndreyAkaSkif.ServiceResult.Implementations
  href: AndreyAkaSkif.html
  name: AndreyAkaSkif.ServiceResult.Implementations
  nameWithType: AndreyAkaSkif.ServiceResult.Implementations
  fullName: AndreyAkaSkif.ServiceResult.Implementations
  spec.csharp:
  - uid: AndreyAkaSkif
    name: AndreyAkaSkif
    href: AndreyAkaSkif.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult
    name: ServiceResult
    href: AndreyAkaSkif.ServiceResult.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult.Implementations
    name: Implementations
    href: AndreyAkaSkif.ServiceResult.Implementations.html
  spec.vb:
  - uid: AndreyAkaSkif
    name: AndreyAkaSkif
    href: AndreyAkaSkif.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult
    name: ServiceResult
    href: AndreyAkaSkif.ServiceResult.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult.Implementations
    name: Implementations
    href: AndreyAkaSkif.ServiceResult.Implementations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  commentId: T:AndreyAkaSkif.ServiceResult.Abstractions.Result{`0}
  parent: AndreyAkaSkif.ServiceResult.Abstractions
  definition: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  name: Result<T>
  nameWithType: Result<T>
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>
  nameWithType.vb: Result(Of T)
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T)
  name.vb: Result(Of T)
  spec.csharp:
  - uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
    name: Result
    href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
    name: Result
    href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.IsFailure
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result{`0}.IsFailure
  parent: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  definition: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsFailure
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_IsFailure
  name: IsFailure
  nameWithType: Result<T>.IsFailure
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.IsFailure
  nameWithType.vb: Result(Of T).IsFailure
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).IsFailure
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.Error
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result{`0}.Error
  parent: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  definition: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Error
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_Error
  name: Error
  nameWithType: Result<T>.Error
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.Error
  nameWithType.vb: Result(Of T).Error
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).Error
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
  commentId: T:AndreyAkaSkif.ServiceResult.Abstractions.Result`1
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  name: Result<T>
  nameWithType: Result<T>
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>
  nameWithType.vb: Result(Of T)
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T)
  name.vb: Result(Of T)
  spec.csharp:
  - uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
    name: Result
    href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1
    name: Result
    href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AndreyAkaSkif.ServiceResult.Abstractions
  commentId: N:AndreyAkaSkif.ServiceResult.Abstractions
  href: AndreyAkaSkif.html
  name: AndreyAkaSkif.ServiceResult.Abstractions
  nameWithType: AndreyAkaSkif.ServiceResult.Abstractions
  fullName: AndreyAkaSkif.ServiceResult.Abstractions
  spec.csharp:
  - uid: AndreyAkaSkif
    name: AndreyAkaSkif
    href: AndreyAkaSkif.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult
    name: ServiceResult
    href: AndreyAkaSkif.ServiceResult.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult.Abstractions
    name: Abstractions
    href: AndreyAkaSkif.ServiceResult.Abstractions.html
  spec.vb:
  - uid: AndreyAkaSkif
    name: AndreyAkaSkif
    href: AndreyAkaSkif.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult
    name: ServiceResult
    href: AndreyAkaSkif.ServiceResult.html
  - name: .
  - uid: AndreyAkaSkif.ServiceResult.Abstractions
    name: Abstractions
    href: AndreyAkaSkif.ServiceResult.Abstractions.html
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsFailure
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsFailure
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_IsFailure
  name: IsFailure
  nameWithType: Result<T>.IsFailure
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.IsFailure
  nameWithType.vb: Result(Of T).IsFailure
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).IsFailure
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Error
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Error
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_Error
  name: Error
  nameWithType: Result<T>.Error
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.Error
  nameWithType.vb: Result(Of T).Error
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).Error
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor*
  commentId: Overload:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.#ctor
  href: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult-1.html#AndreyAkaSkif_ServiceResult_Implementations_UpdatedResult_1__ctor__0_
  name: UpdatedResult
  nameWithType: UpdatedResult<T>.UpdatedResult
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.UpdatedResult
  nameWithType.vb: UpdatedResult(Of T).New
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.IsOk
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result{`0}.IsOk
  parent: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  definition: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsOk
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_IsOk
  name: IsOk
  nameWithType: Result<T>.IsOk
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.IsOk
  nameWithType.vb: Result(Of T).IsOk
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).IsOk
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk*
  commentId: Overload:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.IsOk
  href: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult-1.html#AndreyAkaSkif_ServiceResult_Implementations_UpdatedResult_1_IsOk
  name: IsOk
  nameWithType: UpdatedResult<T>.IsOk
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.IsOk
  nameWithType.vb: UpdatedResult(Of T).IsOk
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).IsOk
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsOk
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result`1.IsOk
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_IsOk
  name: IsOk
  nameWithType: Result<T>.IsOk
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.IsOk
  nameWithType.vb: Result(Of T).IsOk
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).IsOk
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}.Data
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result{`0}.Data
  parent: AndreyAkaSkif.ServiceResult.Abstractions.Result{{T}}
  definition: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Data
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_Data
  name: Data
  nameWithType: Result<T>.Data
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.Data
  nameWithType.vb: Result(Of T).Data
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).Data
- uid: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data*
  commentId: Overload:AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult`1.Data
  href: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult-1.html#AndreyAkaSkif_ServiceResult_Implementations_UpdatedResult_1_Data
  name: Data
  nameWithType: UpdatedResult<T>.Data
  fullName: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult<T>.Data
  nameWithType.vb: UpdatedResult(Of T).Data
  fullName.vb: AndreyAkaSkif.ServiceResult.Implementations.UpdatedResult(Of T).Data
- uid: AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Data
  commentId: P:AndreyAkaSkif.ServiceResult.Abstractions.Result`1.Data
  href: AndreyAkaSkif.ServiceResult.Abstractions.Result-1.html#AndreyAkaSkif_ServiceResult_Abstractions_Result_1_Data
  name: Data
  nameWithType: Result<T>.Data
  fullName: AndreyAkaSkif.ServiceResult.Abstractions.Result<T>.Data
  nameWithType.vb: Result(Of T).Data
  fullName.vb: AndreyAkaSkif.ServiceResult.Abstractions.Result(Of T).Data
